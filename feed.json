{
    "version": "https://jsonfeed.org/version/1",
    "title": "BeiBei-Blog",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/07/03/%E3%80%90ChatGPT%E3%80%91%E5%9F%BA%E4%BA%8EDocker%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84ChatGPT/",
            "url": "http://example.com/2023/07/03/%E3%80%90ChatGPT%E3%80%91%E5%9F%BA%E4%BA%8EDocker%E5%A6%82%E4%BD%95%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2%E8%87%AA%E5%B7%B1%E7%9A%84ChatGPT/",
            "title": "【chatGPT】基于Docker如何快速部署自己的ChatGPT",
            "date_published": "2023-07-03T03:23:03.000Z",
            "content_html": "<h1 id=\"基于docker如何快速部署自己的chatgpt\"><a class=\"markdownIt-Anchor\" href=\"#基于docker如何快速部署自己的chatgpt\">#</a> 基于 Docker 如何快速部署自己的 ChatGPT</h1>\n<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\">#</a> 背景</h2>\n<p>随着<a href=\"https://so.csdn.net/so/search?q=OpenAI&amp;spm=1001.2101.3001.7020\"> OpenAI</a> 在 2022 年底发布的 LLM 模型 - ChatGPT 展现出的强大效果，ChatGPT 无疑成为了当下炙手可热的明星模型。</p>\n<p>现有的基于<a href=\"https://so.csdn.net/so/search?q=GPT&amp;spm=1001.2101.3001.7020\"> GPT</a> 的开源项目已经非常多，本文以现有的高热度 github 开源项目<a href=\"https://github.com/Chanzhaoyu/chatgpt-web\"> chatgpt-web</a> 为例，教大家简单快速地搭建属于自己的 ChatGPT。</p>\n<h2 id=\"chatgpt-web\"><a class=\"markdownIt-Anchor\" href=\"#chatgpt-web\">#</a> ChatGPT-Web</h2>\n<p>chatgpt-web 项目中的部署教程已经非常完整，本文不再过多解释。</p>\n<p>仅以 Docker 部署为例</p>\n<p>前置条件</p>\n<ul>\n<li>本地或者服务器应该具有 Docker 环境</li>\n<li>具有 ChatGPT 帐号</li>\n</ul>\n<p>以 token 模式为例，请求 chatgpt web 版本，免费但稍微具有延迟</p>\n<p><strong>Step1. 找到你帐号的 token</strong></p>\n<p>点击<a href=\"https://chat.openai.com/api/auth/session%EF%BC%8C%E8%8E%B7%E5%8F%96%E4%BD%A0%E5%B8%90%E5%8F%B7%E7%9A%84token%EF%BC%8C%E5%B9%B6%E8%AE%B0%E5%BD%95%E4%BB%96\"> https://chat.openai.com/api/auth/session，获取你帐号的 token，并记录他</a></p>\n<p><strong>Step2. 运行 docker</strong></p>\n<p>按需配置访问 Web 页面的密码，Token、超时等信息</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name chatgpt-web -d -p 127.0.0.1:3888:3002 --<span class=\"built_in\">env</span> OPENAI_ACCESS_TOKEN=your_access_token --<span class=\"built_in\">env</span> AUTH_SECRET_KEY=you_secret_key chenzhaoyu94/chatgpt-web</span><br><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<p><strong>Step3. 访问 localhost:3002 查看效果</strong><br>\n<img src=\"https://brath4.oss-cn-shenzhen.aliyuncs.com/picgo/b6ea40d61cb741129cc1d98af9633d18.png\" alt=\"在这里插入图片描述\"><br>\n在上述步骤中我们无需进行任何代理，就可以直接与 GPT 交流，使用 API 方式同理。当然了，根据项目作者的介绍，<strong>使用 API 时需要进行代理自建</strong>。</p>\n<p>如果你只是在本地部署给自己使用，那么以上 3 步就满足了需求，如果想要在公网访问，或者像 App 一样访问你的 ChatGPT，那么请接着往下看。</p>\n<h2 id=\"nginx反向代理\"><a class=\"markdownIt-Anchor\" href=\"#nginx反向代理\">#</a> Nginx 反向代理</h2>\n<p>以宝塔面板为例，我们在服务器上拉起 docker 镜像后，可以通过 <code>ip:port</code>  进行访问</p>\n<p>但通常来说我们的网站带有域名，以笔者所使用的腾讯云服务器为例</p>\n<p>前置条件</p>\n<ul>\n<li>拥有一个域名</li>\n<li>拥有一台云服务器</li>\n</ul>\n<p><strong>Step1. SSL 证书</strong></p>\n<p>首先在云产品中找到 SSL 证书，点击我的证书 - 免费证书 - 申请免费证书</p>\n<p><img src=\"https://brath4.oss-cn-shenzhen.aliyuncs.com/picgo/34d88a1248ea4158ba5e2e6a07ab0a67.png\" alt=\"在这里插入图片描述\"></p>\n<p>填写申请的域名，申请成功之后，点击下载，下载 nginx 格式的即可</p>\n<p><strong>Step2. 配置域名 SSL</strong></p>\n<p>在宝塔面板中选择 - 网站 - 添加站点</p>\n<p>填写刚刚申请 SSL 证书的域名，选择纯静态，其余默认，点击确定即可</p>\n<p><img src=\"https://brath4.oss-cn-shenzhen.aliyuncs.com/picgo/9ece432796a34885adc258df4bc25555.png\" alt=\"在这里插入图片描述\"></p>\n<p><strong>Step3. 配置证书</strong></p>\n<p>点击添加好的网站，然后点击 SSL，填入刚刚下载的文件中的 <code>key</code>  和 <code>pem</code> <br>\n<img src=\"https://brath4.oss-cn-shenzhen.aliyuncs.com/picgo/852f85f818444491bc4b8e04248b9a4b.png\" alt=\"在这里插入图片描述\"></p>\n<p>配置完成后点击保存</p>\n<p><strong>Step4. 配置 DNS 解析</strong></p>\n<p>在云产品中搜索 - 云解析 - 选择 DNS 解析 DNSPod</p>\n<p>点击我的域名 - 添加记录</p>\n<p><img src=\"https://brath4.oss-cn-shenzhen.aliyuncs.com/picgo/383f44e9fe714847ab5c5f2079d81982.png\" alt=\"在这里插入图片描述\"></p>\n<p>填入刚刚申请的域名，如果带有前缀，则第一个红框填入你的域名前缀，<a href=\"http://xn--www-eo8er22f.baidu.com\">比如 www.baidu.com</a>，则这里填 www</p>\n<p>第二个红框填写你的服务器 ip，或者你的 CDN 域名</p>\n<p><img src=\"https://brath4.oss-cn-shenzhen.aliyuncs.com/picgo/2882e7602c324fc4a9a5520262c23a0a.png\" alt=\"在这里插入图片描述\"></p>\n<p><strong>Step5. 配置反向代理</strong></p>\n<p>在宝塔面板中，点击刚刚添加的网站，点击反向代理，填入刚刚 docker 启动时的宿主机端口<br>\n<img src=\"https://brath4.oss-cn-shenzhen.aliyuncs.com/picgo/abbf944aab284d368e63d28b61024d7f.png\" alt=\"在这里插入图片描述\"></p>\n<p>如上文中的 3888</p>\n<p>以上配置完成之后，访问<a href=\"https://%E4%BD%A0%E7%9A%84%E5%9F%9F%E5%90%8D%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86~\"> https:// 你的域名就可以了～</a></p>\n<h2 id=\"pwa支持\"><a class=\"markdownIt-Anchor\" href=\"#pwa支持\">#</a> PWA 支持</h2>\n<p>PWA 技术可以让我们访问网站能够拥有访问 App 一般的体验，在 chatgpt-web 中已经内嵌，但默认是关闭的</p>\n<p>我们可以通过设置启动时的参数 <code>-env VITE_GLOB_APP_PWA=true</code>  将他打开</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker run --name chatgpt-web -d -p 127.0.0.1:3888:3002 --<span class=\"built_in\">env</span> OPENAI_ACCESS_TOKEN=your_access_token --<span class=\"built_in\">env</span> AUTH_SECRET_KEY=you_secret_key --<span class=\"built_in\">env</span> VITE_GLOB_APP_PWA=<span class=\"literal\">true</span> chenzhaoyu94/chatgpt-web</span><br><span class=\"line\">1</span><br></pre></td></tr></table></figure>\n<p>部署成功之后，我们再到手机上访问该网站时便可以保存他在桌面了。</p>\n<p>默认的 PWA 图标和全局用户信息配置在项目中，即使在网页可以修改当前登陆者的用户信息，在清除 Cookie 之后便会还原，如果你想定制这两种信息，请拉下 chatgpt-web 项目进行镜像自定义</p>\n",
            "tags": []
        }
    ]
}